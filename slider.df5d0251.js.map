{"version":3,"sources":["../js/slider.js"],"names":["track","document","querySelector","slides","Array","from","children","nextButton","prevButton","dotsNav","dots","slideWidth","getBoundingClientRect","width","setSlidePosition","slide","index","style","left","forEach","moveToSlide","currentSlide","targetSlide","transform","classList","remove","add","updateDots","currentDot","targetDot","hideShowsArrows","targetIndex","length","addEventListener","e","prevSlide","previousElementSibling","prevDot","prevIndex","findIndex","nextSlide","nextElementSibling","nextDot","nextIndex","target","closest","dot"],"mappings":";AAAA,MAAMA,EAAQC,SAASC,cAAc,kBAC/BC,EAASC,MAAMC,KAAKL,EAAMM,UAC1BC,EAAaN,SAASC,cAAc,0BACpCM,EAAaP,SAASC,cAAc,yBACpCO,EAAUR,SAASC,cAAc,gBACjCQ,EAAON,MAAMC,KAAKI,EAAQH,UAE1BK,EAAaR,EAAO,GAAGS,wBAAwBC,MAI/CC,EAAmB,CAACC,EAAOC,KAC/BD,EAAME,MAAMC,KAAOP,EAAaK,EAAQ,MAE1Cb,EAAOgB,QAAQL,GAEf,MAAMM,EAAc,CAACpB,EAAOqB,EAAcC,KACxCtB,EAAMiB,MAAMM,UAAY,eAAiBD,EAAYL,MAAMC,KAAO,IAClEG,EAAaG,UAAUC,OAAO,iBAC9BH,EAAYE,UAAUE,IAAI,kBAGtBC,EAAa,CAACC,EAAYC,KAC9BD,EAAWJ,UAAUC,OAAO,iBAC5BI,EAAUL,UAAUE,IAAI,kBAGpBI,EAAkB,CAAC3B,EAAQK,EAAYD,EAAYwB,KACnC,IAAhBA,GACFvB,EAAWgB,UAAUE,IAAI,aACzBnB,EAAWiB,UAAUC,OAAO,cACnBM,IAAgB5B,EAAO6B,OAAS,GACzCxB,EAAWgB,UAAUC,OAAO,aAC5BlB,EAAWiB,UAAUE,IAAI,eAEzBlB,EAAWgB,UAAUC,OAAO,aAC5BlB,EAAWiB,UAAUC,OAAO,eAIhCjB,EAAWyB,iBAAiB,QAASC,IAC7Bb,MAAAA,EAAerB,EAAME,cAAc,kBACnCiC,EAAYd,EAAae,uBACzBR,EAAanB,EAAQP,cAAc,kBACnCmC,EAAUT,EAAWQ,uBACrBE,EAAWnC,EAAOoC,UAAUxB,GAASA,IAAUoB,GAErDf,EAAYpB,EAAOqB,EAAcc,GACjCR,EAAWC,EAAYS,GACvBP,EAAgB3B,EAAQK,EAAYD,EAAY+B,KAGlD/B,EAAW0B,iBAAiB,QAASC,IAC7Bb,MAAAA,EAAerB,EAAME,cAAc,kBACnCsC,EAAYnB,EAAaoB,mBACzBb,EAAanB,EAAQP,cAAc,kBACnCwC,EAAUd,EAAWa,mBACrBE,EAAWxC,EAAOoC,UAAUxB,GAASA,IAAUyB,GAErDpB,EAAYpB,EAAOqB,EAAcmB,GACjCb,EAAWC,EAAYc,GACvBZ,EAAgB3B,EAAQK,EAAYD,EAAYoC,KAIlDlC,EAAQwB,iBAAiB,QAASC,IAE1BL,MAAAA,EAAYK,EAAEU,OAAOC,QAAQ,OAE/B,IAAChB,EAAW,OAEVR,MAAAA,EAAerB,EAAME,cAAc,kBACnC0B,EAAanB,EAAQP,cAAc,kBACnC6B,EAAcrB,EAAK6B,UAAUO,GAAOA,IAAQjB,GAC5CP,EAAcnB,EAAO4B,GAE3BX,EAAYpB,EAAOqB,EAAcC,GACjCK,EAAWC,EAAYC,GACvBC,EAAgB3B,EAAQK,EAAYD,EAAYwB","file":"slider.df5d0251.js","sourceRoot":"../src","sourcesContent":["const track = document.querySelector('.slider__track');\nconst slides = Array.from(track.children);\nconst nextButton = document.querySelector('.slider__button--right');\nconst prevButton = document.querySelector('.slider__button--left');\nconst dotsNav = document.querySelector('.slider__nav');\nconst dots = Array.from(dotsNav.children);\n\nconst slideWidth = slides[0].getBoundingClientRect().width;\n\n// arrange the slides next to one another\n\nconst setSlidePosition = (slide, index) => {\n  slide.style.left = slideWidth * index + 'px';\n};\nslides.forEach(setSlidePosition);\n\nconst moveToSlide = (track, currentSlide, targetSlide) => {\n  track.style.transform = 'translateX(-' + targetSlide.style.left + ')';\n  currentSlide.classList.remove('current-slide');\n  targetSlide.classList.add('current-slide');\n};\n\nconst updateDots = (currentDot, targetDot) => {\n  currentDot.classList.remove('current-slide');\n  targetDot.classList.add('current-slide');\n};\n\nconst hideShowsArrows = (slides, prevButton, nextButton, targetIndex) => {\n  if (targetIndex === 0) {\n    prevButton.classList.add('is-hidden');\n    nextButton.classList.remove('is-hidden');\n  } else if (targetIndex === slides.length - 1) {\n    prevButton.classList.remove('is-hidden');\n    nextButton.classList.add('is-hidden');\n  } else {\n    prevButton.classList.remove('is-hidden');\n    nextButton.classList.remove('is-hidden');\n  }\n}\n// when I click left, move slides to the left\nprevButton.addEventListener('click', e => {\n  const currentSlide = track.querySelector('.current-slide');\n  const prevSlide = currentSlide.previousElementSibling;\n  const currentDot = dotsNav.querySelector('.current-slide');\n  const prevDot = currentDot.previousElementSibling;\n  const prevIndex =slides.findIndex(slide => slide === prevSlide);\n\n  moveToSlide(track, currentSlide, prevSlide);\n  updateDots(currentDot, prevDot);\n  hideShowsArrows(slides, prevButton, nextButton, prevIndex);\n});\n// when I click right, move slides to the right\nnextButton.addEventListener('click', e => {\n  const currentSlide = track.querySelector('.current-slide');\n  const nextSlide = currentSlide.nextElementSibling;\n  const currentDot = dotsNav.querySelector('.current-slide');\n  const nextDot = currentDot.nextElementSibling;\n  const nextIndex =slides.findIndex(slide => slide === nextSlide);\n\n  moveToSlide(track, currentSlide, nextSlide);\n  updateDots(currentDot, nextDot);\n  hideShowsArrows(slides, prevButton, nextButton, nextIndex);\n});\n//when I click the nav indicators, move to that slide\n\ndotsNav.addEventListener('click', e => {\n  //what indicator was clicked on?\n  const targetDot = e.target.closest('svg');\n\n  if (!targetDot) return;\n\n  const currentSlide = track.querySelector('.current-slide');\n  const currentDot = dotsNav.querySelector('.current-slide');\n  const targetIndex = dots.findIndex(dot => dot === targetDot);\n  const targetSlide = slides[targetIndex];\n\n  moveToSlide(track, currentSlide, targetSlide);\n  updateDots(currentDot, targetDot);\n  hideShowsArrows(slides, prevButton, nextButton, targetIndex);\n});\n"]}